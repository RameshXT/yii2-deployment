name: CICD - Yii 2 Application

on:
  push:
    branches: [ master ]

jobs:
  CICD:
    name: Continuous Integration and Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Ansible Configuration step 
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan "${{ secrets.EC2_IP }}" >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/playbooks/configuration.yml -i ansible/playbooks/hosts
          ansible-playbook ansible/playbooks/reverse-proxy.yml -i ansible/playbooks/hosts

      # Docker Build Push steps
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: |
          echo "Logging into Docker Hub.."
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          echo "Logged in to Docker Hub."

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: rameshxt/yii2:v2.0.${{ github.run_number }}

      # SSH into EC2 and deploy
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: IMAGE_TAG
          script: |
            set -e
            IMAGE_TAG="rameshxt/yii2:v2.0.${{ github.run_number }}"
            echo "IMAGE_TAG is: $IMAGE_TAG"

            echo "Updating image tag in Docker-compose.yml.."
            chmod +x ./home/ec2-user/yii2-deployment/image-updater.sh
            ./home/ec2-user/yii2-deployment/image-updater.sh "$IMAGE_TAG"
            echo "Docker-compose.yml updated successfully."

            echo "Checking if Docker Swarm is already initialized..."
            if docker info | grep -q 'Swarm: active'; then
              echo "Docker Swarm is already initialized."
            else
              echo "Initializing Docker Swarm..."
              docker swarm init
            fi

            echo "Deploying stack to Docker Swarm..."
            docker stack deploy -c /home/ec2-user/yii2-deployment/Docker-compose.yml yii2-app

            echo "Deployment complete. Showing service status:"
            docker service ls

            echo "ðŸŽ‰ðŸŽ‰ Congratulations! ðŸŽ‰ðŸŽ‰"
            echo "Yii 2 Basic application has been successfully deployed on Docker Swarm!"
            echo ""
            echo "    Deployment Details:"
            echo "    Deployment Run Number: #${{ github.run_number }}"
            echo "    Date & Time: $(date)"
            echo "    Live now: http://${{ secrets.EC2_PUBLIC_IP }}/"
            echo ""
            echo "    You can access the application by clicking the URL above."
            echo "    Enjoy the application, and happy coding! ðŸ˜Ž"
